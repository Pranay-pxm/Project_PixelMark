{"ast":null,"code":"var _jsxFileName = \"D:\\\\pixelmark\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PageInsights from \"./Components/PageInsights\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLoginStatus = async () => {\n  let loginStatus = false;\n  await FB.getLoginStatus(function (response) {\n    console.log(\"response\", response);\n    if (response.status === \"connected\") {\n      loginStatus = true;\n    }\n  });\n  return loginStatus;\n};\nconst fbLogin = async _ref => {\n  let {\n    setLoginResponse\n  } = _ref;\n  const isUserLoggedIn = await getLoginStatus();\n  console.log(\"getLoginStatus\", isUserLoggedIn);\n  if (!isUserLoggedIn) {\n    await FB.login(function (response) {\n      console.log(response);\n      setLoginResponse(response);\n      if (response.status === \"connected\") {\n        // Logged into your webpage and Facebook.\n      } else {\n        // The person is not logged into your webpage or we are unable to tell.\n      }\n    }, {\n      scope: \"user_birthday,user_hometown,user_location,user_likes,user_events,user_photos,user_videos,user_friends,user_posts,user_gender,user_link,user_age_range,email,read_insights,publish_video,catalog_management,user_managed_groups,groups_show_list,pages_manage_cta,pages_manage_instant_articles,pages_show_list,read_page_mailboxes,ads_management,ads_read,business_management,pages_messaging,pages_messaging_phone_number,pages_messaging_subscriptions,instagram_basic,instagram_manage_comments,instagram_manage_insights,publish_to_groups,groups_access_member_info,leads_retrieval,whatsapp_business_management,attribution_read,pages_read_engagement,pages_manage_metadata,pages_read_user_content,pages_manage_ads,pages_manage_posts,pages_manage_engagement,public_profile\"\n    });\n  }\n};\nconst getPageListAccessToken = async _ref2 => {\n  let {\n    loginResponse,\n    setPageObj\n  } = _ref2;\n  const {\n    authResponse = {}\n  } = loginResponse;\n  console.log(`${authResponse.userID}/accounts?fields=name,access_token&access_token=${authResponse.accessToken}`);\n  await FB.api(`${authResponse.userID}/accounts?fields=name,access_token&access_token=${authResponse.accessToken}`, function (response) {\n    setPageObj(response);\n  });\n};\nconst test = () => {\n  function testAPI() {\n    // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n    console.log(\"Welcome!  Fetching your information.... \");\n    FB.api(\"/me\", function (response) {\n      // document.getElementById(\"status\").innerHTML =\n      //   \"Thanks for logging in, \" + response.name + \"!\";\n    });\n  }\n};\nfunction App() {\n  _s();\n  const [loginResponse, setLoginResponse] = useState({});\n  const [pageObj, setPageObj] = useState({});\n  useEffect(() => {\n    fbLogin({\n      setLoginResponse\n    });\n  }, []);\n  useEffect(() => {\n    async function tempFunc() {\n      const isLoggedIn = await getLoginStatus();\n      console.log(\"isLoggedIn\", isLoggedIn);\n      if (isLoggedIn) {\n        await getPageListAccessToken({\n          loginResponse,\n          setPageObj\n        });\n      }\n    }\n    tempFunc();\n  }, [loginResponse]);\n  console.log(\"loginResponse\", loginResponse);\n\n  // return <PageInsights/>\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(PageInsights, {\n      pageObj: pageObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"EevXTp/Tr9FiqAUmZ+6hdvwk1f0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","logo","PageInsights","getLoginStatus","loginStatus","FB","response","console","log","status","fbLogin","setLoginResponse","isUserLoggedIn","login","scope","getPageListAccessToken","loginResponse","setPageObj","authResponse","userID","accessToken","api","test","testAPI","App","pageObj","tempFunc","isLoggedIn"],"sources":["D:/pixelmark/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport PageInsights from \"./Components/PageInsights\";\n\nconst getLoginStatus = async () => {\n  let loginStatus = false;\n  await FB.getLoginStatus(function (response) {\n    console.log(\"response\", response);\n    if (response.status === \"connected\") {\n      loginStatus = true;\n    }\n  });\n  return loginStatus;\n};\n\nconst fbLogin = async ({ setLoginResponse }) => {\n  const isUserLoggedIn = await getLoginStatus();\n  console.log(\"getLoginStatus\", isUserLoggedIn);\n  if (!isUserLoggedIn) {\n    await FB.login(\n      function (response) {\n        console.log(response);\n        setLoginResponse(response);\n        if (response.status === \"connected\") {\n          // Logged into your webpage and Facebook.\n        } else {\n          // The person is not logged into your webpage or we are unable to tell.\n        }\n      },\n      {\n        scope:\n          \"user_birthday,user_hometown,user_location,user_likes,user_events,user_photos,user_videos,user_friends,user_posts,user_gender,user_link,user_age_range,email,read_insights,publish_video,catalog_management,user_managed_groups,groups_show_list,pages_manage_cta,pages_manage_instant_articles,pages_show_list,read_page_mailboxes,ads_management,ads_read,business_management,pages_messaging,pages_messaging_phone_number,pages_messaging_subscriptions,instagram_basic,instagram_manage_comments,instagram_manage_insights,publish_to_groups,groups_access_member_info,leads_retrieval,whatsapp_business_management,attribution_read,pages_read_engagement,pages_manage_metadata,pages_read_user_content,pages_manage_ads,pages_manage_posts,pages_manage_engagement,public_profile\",\n      }\n    );\n  }\n};\n\nconst getPageListAccessToken = async ({ loginResponse, setPageObj }) => {\n  const { authResponse = {} } = loginResponse;\n  console.log(\n    `${authResponse.userID}/accounts?fields=name,access_token&access_token=${authResponse.accessToken}`\n  );\n  await FB.api(\n    `${authResponse.userID}/accounts?fields=name,access_token&access_token=${authResponse.accessToken}`,\n    function (response) {\n      setPageObj(response);\n    }\n  );\n};\n\nconst test = () => {\n  function testAPI() {\n    // Testing Graph API after login.  See statusChangeCallback() for when this call is made.\n    console.log(\"Welcome!  Fetching your information.... \");\n    FB.api(\"/me\", function (response) {\n      // document.getElementById(\"status\").innerHTML =\n      //   \"Thanks for logging in, \" + response.name + \"!\";\n    });\n  }\n};\n\nfunction App() {\n  const [loginResponse, setLoginResponse] = useState({});\n  const [pageObj, setPageObj] = useState({});\n  useEffect(() => {\n    fbLogin({ setLoginResponse });\n  }, []);\n\n  useEffect(() => {\n    async function tempFunc() {\n      const isLoggedIn = await getLoginStatus();\n      console.log(\"isLoggedIn\", isLoggedIn);\n      if (isLoggedIn) {\n        await getPageListAccessToken({ loginResponse, setPageObj });\n      }\n    }\n    tempFunc();\n  }, [loginResponse]);\n\n  console.log(\"loginResponse\", loginResponse);\n\n  // return <PageInsights/>\n\n  return (\n    <div className=\"App\">\n      <PageInsights pageObj={pageObj} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}